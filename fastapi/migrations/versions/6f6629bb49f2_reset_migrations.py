"""reset migrations

Revision ID: 6f6629bb49f2
Revises: 
Create Date: 2024-07-25 21:46:43.551935

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6f6629bb49f2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('summary', sa.String(length=300), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_visit', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('follow_table',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book', sa.String(), nullable=False),
    sa.Column('subject', sa.String(length=30), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=300), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dislike_review_table',
    sa.Column('dislike_review_account', sa.Integer(), nullable=False),
    sa.Column('dislike_review', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dislike_review'], ['review.id'], ),
    sa.ForeignKeyConstraint(['dislike_review_account'], ['account.id'], ),
    sa.PrimaryKeyConstraint('dislike_review_account', 'dislike_review')
    )
    op.create_table('like_review_table',
    sa.Column('like_review_account', sa.Integer(), nullable=False),
    sa.Column('like_review', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['like_review'], ['review.id'], ),
    sa.ForeignKeyConstraint(['like_review_account'], ['account.id'], ),
    sa.PrimaryKeyConstraint('like_review_account', 'like_review')
    )
    op.create_table('dislike_comment_table',
    sa.Column('dislike_comment_account', sa.Integer(), nullable=False),
    sa.Column('dislike_comment', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dislike_comment'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['dislike_comment_account'], ['account.id'], ),
    sa.PrimaryKeyConstraint('dislike_comment_account', 'dislike_comment')
    )
    op.create_table('like_comment_table',
    sa.Column('like_comment_account', sa.Integer(), nullable=False),
    sa.Column('like_comment', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['like_comment'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['like_comment_account'], ['account.id'], ),
    sa.PrimaryKeyConstraint('like_comment_account', 'like_comment')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('like_comment_table')
    op.drop_table('dislike_comment_table')
    op.drop_table('like_review_table')
    op.drop_table('dislike_review_table')
    op.drop_table('comment')
    op.drop_table('review')
    op.drop_table('follow_table')
    op.drop_table('account')
    # ### end Alembic commands ###
